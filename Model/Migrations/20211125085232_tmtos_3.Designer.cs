// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Configuration;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20211125085232_tmtos_3")]
    partial class tmtos_3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Entity.TestEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("Number")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("NUMBER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("PASSWORD");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TEST_ENTITIES");
                });

            modelBuilder.Entity("Model.Entity.TestManyToOne", b =>
                {
                    b.Property<int>("TEST_ID")
                        .HasColumnType("int");

                    b.HasKey("TEST_ID");

                    b.ToTable("TEST_MTOS");
                });

            modelBuilder.Entity("Model.Entity.TestManyToOne", b =>
                {
                    b.HasOne("Model.Entity.TestEntity", "TestEntity")
                        .WithMany("TestManyToOnes")
                        .HasForeignKey("TEST_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestEntity");
                });

            modelBuilder.Entity("Model.Entity.TestEntity", b =>
                {
                    b.Navigation("TestManyToOnes");
                });
#pragma warning restore 612, 618
        }
    }
}
