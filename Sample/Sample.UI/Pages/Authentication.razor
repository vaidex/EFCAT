@page "/login"
@using EFCAT.Model.Data.Annotation
@using EFCAT.Service.Authentication
@using EFCAT.Service.Component.Validation
@using Sample.Model.Entity
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider AuthProvider


<AuthorizeView>
    <Authorized Context="AuthContext">
        @if (Account != null) {
            <span>Auth</span>
            <button @onclick=@(() => AuthService.LogoutAsync().ContinueWith((a) => _navigationManager.NavigateTo("/", forceLoad: true)))>Logout</button>
        }
        <hr />
        <ul>
            <li>
                <b>Name</b>
                <span>@AuthContext.User.Claims.First(o => o.Type == "Name").Value</span>
            </li>
            <li>
                <b>Roles</b>
                <ul>
                    @foreach (string str in new string[] { "Nice", "Noice", "Admin" }) {
                        <li>
                            <b>@str</b>
                            <span> @AuthContext.User.IsInRole(str) </span>
                        </li>
                    }
                </ul>
            </li>
        </ul>

    </Authorized>
    <NotAuthorized Context="NoAuthContext">
        No Auth
        <EditForm Model="Login" OnValidSubmit="ExecuteLogin">
            <h3 class="title">Login</h3>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <input type="text" @bind-value="Login.Identifier" placeholder="Identifier" />
            <input type="text" @bind-value="Login.Password" placeholder="Password" />
            <button>Submit</button>
        </EditForm>
        <EditForm Model="Register" OnValidSubmit="ExecuteRegister">
            <h3 class="title">Registration</h3>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <input type="text" @bind-value="Register.Name" placeholder="Name" />
            <CustomError For="() => Register.Name" />
            <input type="text" @bind-value="Register.Email" placeholder="Email" />
            <CustomError For="() => Register.Email" />
            <input type="text" @bind-value="Register.Password" placeholder="Password" />
            <CustomError For="() => Register.Password" />
            <input type="text" @bind-value="Register.RepeatPassword" placeholder="Repeat" />
            <CustomError For="() => Register.RepeatPassword" />
            <button>Submit</button>
        </EditForm>
    </NotAuthorized>
    <Authorizing>
        Authorizing...
    </Authorizing>
</AuthorizeView>

@code {
    [CascadingParameter] IAuthenticationService<User> AuthService { get; set; }
    [CascadingParameter] User Account { get; set; }

    public LoginForm Login { get; set; } = new LoginForm();
    public RegisterForm Register { get; set; } = new RegisterForm();

    private void ExecuteLogin() => _navigationManager.NavigateTo("/", forceLoad: true);
    private void ExecuteRegister() => _navigationManager.NavigateTo("/", forceLoad: true);

    [Authentication("REGISTER", ErrorMessage = "Something went wrong. Please try again later.")]
    public class RegisterForm : User {
        [Compare("Password", ErrorMessage = "No matching Passwords!")]
        [NotNull]
        public string RepeatPassword { get; set; }
    }

    [Authentication("LOGIN", ErrorMessage = "Identifier or Password incorrect.")]
    public class LoginForm {
        [Substitute("Name", "Email")]
        [NotNull]
        public string Identifier { get; set; }

        [NotNull]
        public string Password { get; set; }
    }
}
